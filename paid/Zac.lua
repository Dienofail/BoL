if myHero.charName ~= "Zac" then
  return
end
function c(bytes)
  s = {}
  for i in pairs(bytes) do
    s[i] = string.char(bytes[i])
  end
  return table.concat(s)
end
_ENV[c({
  100,
  101,
  118,
  110,
  97,
  109,
  101
})] = c({
  100,
  105,
  101,
  110,
  111,
  102,
  97,
  105,
  108
})
_ENV[c({
  115,
  99,
  114,
  105,
  112,
  116,
  110,
  97,
  109,
  101
})] = "zac"
_ENV[c({
  115,
  99,
  114,
  105,
  112,
  116,
  118,
  101,
  114
})] = 0.09
--LoadProtectedScript("VjUzEzdFTURpN0NFYN50TGhvRUxAbTNLRXlNeER2ZUVMRm1zSyB5TXlMMuXFU0DtM0lFeU19RXJlRRMHbTdFRXlNOykeJDA4KCRdISAaOXlHcmVFTUBtM0pFeU17RnppRUxA6zMLRb8NOUZ05AVMAGwzS1j4TXgCc2VFzYFtM4tE+U2kRvJn2MxAba4LxXlSecZyYUVMQGk0S0V5LAo1FxcxTERoM0tFFSIYInJhSExAbXEqNhx7TQIXBiooJW03SEV5TRsycmVFTEBsM0tFeU15RnJlRUxAbTNLRXlNeUZyZEVMQGwzS0V5TXlGcmVFTEBtM0tFeQ==152FFD869C72438577F413093F7FAC75")
--BolAuthInject("", _ENV)
--failreasononend = true
--failmessage = "Fail Auth "
--authmessage = "Authed as " .. UserName
--validatingmessage = "Validating"
--noservers = "No Servers"
local version = "0.09"
local ProdOneLoaded = false
function OnLoad()
  print("<font color=\"#FF0000\">DienoZac: Please save file exactly as Zac.lua in Scripts folder for autoupdater to work</font>")
  print("<font color=\"#FF0000\">DienoZac: It is highly recommended you use SoW, as SAC:R/MMA may interfere with E casting</font>")
   _ENV._G[_ENV.c({
    106,
    100,
    107,
    110,
    109,
    118
  })] = true
  DelayAction(checkOrbwalker, 5)
  DelayAction(Menu, 5.5)
  DelayAction(Init, 5.5)
  require("VPrediction")
  local OpenAccess = true
  VP = VPrediction()
  ProdOneLoaded = false
  local IsSowLoaded = false
  local isBeta = false
  local ProdFile = LIB_PATH .. "Prodiction.lua"
  local fh = io.open(ProdFile, "r")
  if fh ~= nil then
    local line = fh:read()
    local Version = string.match(line, "%d+.%d+")
    if tonumber(Version) > 0.8 then
      ProdOneLoaded = true
    end
    if ProdOneLoaded then
      require("Prodiction")
      print("<font color=\"#FF0000\">Prodiction 1.0 Loaded for DienoZac, 1.0 option is usable</font>")
    else
      print("<font color=\"#FF0000\">Prodiction 1.0 not detected for DienoZac, 1.0 is not usable (will cause errors if checked)</font>")
    end
  else
    print("<font color=\"#FF0000\">No Prodiction.lua detected, using only VPRED</font>")
  end
  math.randomseed(os.time() + GetInGameTimer() + GetTickCount())
  local AUTOUPDATE = true
  local UPDATE_NAME = "Zac"
  local UPDATE_HOST = "raw.github.com"
  local VERSION_PATH = "/Dienofail/BoL/master/versions/Zac.version" .. "?rand=" .. math.random(1, 10000)
  local UPDATE_FILE_PATH = SCRIPT_PATH .. "Zac.lua"
  local UPDATE_FILE_PATH = string.gsub(UPDATE_FILE_PATH, "\\", "/")
  local UPDATE_URL = "http://www.dienofail.com/Zac.lua" .. "?rand=" .. math.random(1, 100000)
  function Download()
    DownloadFile(UPDATE_URL, UPDATE_FILE_PATH, function()
      print("<font color=\"#FF0000\">DienoZac Download Finished, Please Double F9 after auth</font>")
    end)
  end
  if AUTOUPDATE then
    local ServerData = GetWebResult(UPDATE_HOST, VERSION_PATH)
    if ServerData then
      local ServerVersion = string.match(ServerData, "%d+.%d+")
      if ServerVersion then
        ServerVersion = tonumber(ServerVersion)
        if ServerVersion > tonumber(version) then
          print("<font color=\"#FF0000\">New version available " .. ServerVersion .. "</font>")
          print("<font color=\"#FF0000\">Updating, please don't press F9</font>")
          DelayAction(Download, 2)
        else
          print("<font color=\"#FF0000\">You have got the latest version (" .. ServerVersion .. ")</font>")
        end
      end
    else
      print("<font color=\"#FF0000\">Error downloading version info</font>")
    end
  end
end
local Config
local ERanges = {
  1150,
  1250,
  1350,
  1450,
  1550
}
local SpellE = {
  Range = {
    1150,
    1250,
    1350,
    1450,
    1550
  },
  Width = 70,
  Speed = 1500,
  Delay = 0.25,
  MaxDelay = {
    900,
    1000,
    1100,
    1200,
    1300
  }
}
local SpellR = {
  Range = 300,
  Width = 300,
  Speed = math.huge,
  Delay = 0.25
}
local SpellW = {
  Range = 350,
  Width = 350,
  Delay = 0,
  Speed = math.huge
}
local SpellQ = {
  Range = 570,
  Width = 100,
  Delay = 0.25,
  Speed = 1800
}
local CurrentERange = 0
local CurrentEMaxDelay = math.huge
local CurrentRange = 0
local isAuthed = false
local CurrentHoldTime = 0
local LastETick = math.huge
local LastEVector = 0
local EStartTick = 0
local Overriding = false
local initDone = false
local isCastE = false
local Blobs = {}
local ToInterrupt = {
  {
    charName = "Caitlyn",
    spellName = "CaitlynAceintheHole"
  },
  {
    charName = "FiddleSticks",
    spellName = "Crowstorm"
  },
  {
    charName = "FiddleSticks",
    spellName = "DrainChannel"
  },
  {
    charName = "Galio",
    spellName = "GalioIdolOfDurand"
  },
  {charName = "Karthus", spellName = "FallenOne"},
  {charName = "Katarina", spellName = "KatarinaR"},
  {charName = "Lucian", spellName = "LucianR"},
  {
    charName = "Malzahar",
    spellName = "AlZaharNetherGrasp"
  },
  {
    charName = "MissFortune",
    spellName = "MissFortuneBulletTime"
  },
  {
    charName = "Nunu",
    spellName = "AbsoluteZero"
  },
  {
    charName = "Pantheon",
    spellName = "Pantheon_GrandSkyfall_Jump"
  },
  {
    charName = "Shen",
    spellName = "ShenStandUnited"
  },
  {charName = "Urgot", spellName = "UrgotSwap2"},
  {charName = "Varus", spellName = "VarusQ"},
  {
    charName = "Warwick",
    spellName = "InfiniteDuress"
  }
}
function Init()
  ts = TargetSelector(TARGET_LESS_CAST_PRIORITY, 550, DAMAGE_MAGICAL)
  ts2 = TargetSelector(TARGET_LESS_CAST_PRIORITY, 1550, DAMAGE_MAGICAL)
  ts.name = "Main"
  ts2.name = "E TS"
  Config:addTS(ts2)
  Config:addTS(ts)
  EnemyMinions = minionManager(MINION_ENEMY, 1200, myHero, MINION_SORT_MAXHEALTH_DEC)
  JungleMinions = minionManager(MINION_JUNGLE, 1200, myHero, MINION_SORT_MAXHEALTH_DEC)
  initDone = true
  _G[c({
    106,
    100,
    107,
    110,
    109,
    118
  })] = true
  if not isBeta then
    print("<font color=\"#FF0000\">DienoZac " .. tostring(version) .. " loaded!<font color=\"#FF0000\">")
  else
    print("<font color=\"#FF0000\">DienoZac Nightly Beta " .. tostring(version) .. " loaded!<font color=\"#FF0000\">")
    print("<font color=\"#FF0000\">Warning this is a nightly beta version: expect bugs!<font color=\"#FF0000\">")
  end
end
function Menu()
  Config = _ENV.scriptConfig("Zac", "Zac")
  Config:addParam("Combo", "Combo", _ENV.SCRIPT_PARAM_ONKEYDOWN, false, 32)
  Config:addParam("Farm", "Farm", _ENV.SCRIPT_PARAM_ONKEYDOWN, false, _ENV.string.byte("V"))
  Config:addParam("AimE", "Manual Aim E", _ENV.SCRIPT_PARAM_ONKEYDOWN, false, _ENV.string.byte("T"))
  Config:addParam("Harass", "Harass", _ENV.SCRIPT_PARAM_ONKEYDOWN, false, _ENV.string.byte("C"))
  Config:addParam("CancelE", "Emergency Cancel E", _ENV.SCRIPT_PARAM_ONKEYDOWN, false, _ENV.string.byte("Z"))
  Config:addSubMenu("Combo options", "ComboSub")
  Config:addSubMenu("Harass options", "HarassSub")
  Config:addSubMenu("Farm options", "FarmSub")
  Config:addSubMenu("KS", "KS")
  Config:addSubMenu("Extra Config", "Extras")
  Config:addSubMenu("Draw", "Draw")
  ComboSub:addParam("useQ", "Use Q", _ENV.SCRIPT_PARAM_ONOFF, true)
  ComboSub:addParam("useW", "Use W", _ENV.SCRIPT_PARAM_ONOFF, true)
  ComboSub:addParam("useE", "Use E", _ENV.SCRIPT_PARAM_ONOFF, true)
  ComboSub:addParam("useR", "Use R", _ENV.SCRIPT_PARAM_ONOFF, false)
  FarmSub:addParam("useQ", "Use Q", _ENV.SCRIPT_PARAM_ONOFF, true)
  FarmSub:addParam("useW", "Use W", _ENV.SCRIPT_PARAM_ONOFF, true)
  FarmSub:addParam("useE", "Use E", _ENV.SCRIPT_PARAM_ONOFF, true)
  HarassSub:addParam("useQ", "Use Q", _ENV.SCRIPT_PARAM_ONOFF, true)
  HarassSub:addParam("useW", "Use W", _ENV.SCRIPT_PARAM_ONOFF, true)
  HarassSub:addParam("useE", "Use E", _ENV.SCRIPT_PARAM_ONOFF, true)
  KS:addParam("useQ", "Use Q", _ENV.SCRIPT_PARAM_ONOFF, true)
  KS:addParam("useW", "Use W", _ENV.SCRIPT_PARAM_ONOFF, true)
  KS:addParam("Ignite", "Use Ignite", _ENV.SCRIPT_PARAM_ONOFF, true)
  Draw:addParam("DrawQ", "Draw Q Range", _ENV.SCRIPT_PARAM_ONOFF, true)
  Draw:addParam("DrawW", "Draw W Range", _ENV.SCRIPT_PARAM_ONOFF, false)
  Draw:addParam("DrawE", "Draw E Range", _ENV.SCRIPT_PARAM_ONOFF, false)
  Draw:addParam("DrawTarget", "Draw Target", _ENV.SCRIPT_PARAM_ONOFF, true)
  Draw:addParam("DrawBlobs", "Draw Blobs", _ENV.SCRIPT_PARAM_ONOFF, true)
  Extras:addParam("Debug", "Debug", _ENV.SCRIPT_PARAM_ONOFF, false)
  Extras:addParam("RSpells", "R to interrupt channeling spells", _ENV.SCRIPT_PARAM_ONOFF, true)
  Extras:addParam("mManager", "Health slider", _ENV.SCRIPT_PARAM_SLICE, 0, 0, 100, 0)
  Extras:addParam("RHits", "Auto R when X enemies in range", _ENV.SCRIPT_PARAM_SLICE, 3, 1, 5, 0)
  Extras:addParam("MinERange", "Min Distance from enemy for E", _ENV.SCRIPT_PARAM_SLICE, 300, 100, 1000, 0)
  if ProdOneLoaded then
    Extras:addParam("Prodiction", "Use Prodiction 1.0 instead of VPred", _ENV.SCRIPT_PARAM_ONOFF, false)
  end
  if _ENV.IsSowLoaded then
    Config:addSubMenu("Orbwalker", "SOWiorb")
    _ENV.SOWi:LoadToMenu(SOWiorb)
    SOWiorb.Mode0 = false
  end
end
function GetCustomTarget()
  ts:update()
  ts2:update()
  if _G.MMA_Target and _G.MMA_Target.type == myHero.type then
    return _G.MMA_Target, ts2.target
  end
  if _G.AutoCarry and _G.AutoCarry.Crosshair and _G.AutoCarry.Attack_Crosshair and _G.AutoCarry.Attack_Crosshair.target and _G.AutoCarry.Attack_Crosshair.target.type == myHero.type then
    return _G.AutoCarry.Attack_Crosshair.target, ts2.target
  end
  return ts.target, ts2.target
end
function OnTick()
  if initDone and _ENV._G[_ENV.c({
    106,
    100,
    107,
    110,
    109,
    118
  })] then
    _ENV.Check()
    _ENV.target2 = _ENV.GetCustomTarget()
    _ENV.target = _ENV.GetCustomTarget()
    _ENV.CalculateRange()
    if Config.CancelE then
      if _ENV.target ~= nil and _ENV.ValidTarget(_ENV.target) then
        _ENV.CastE2(_ENV.target)
        if Config.Extras.Debug then
          _ENV.print("CancelE - 1")
        end
      elseif _ENV.target2 ~= nil and _ENV.ValidTarget(_ENV.target2) then
        _ENV.CastE2(_ENV.target2)
        if Config.Extras.Debug then
          _ENV.print("CancelE - 2")
        end
      elseif _ENV.GetDistance(_ENV.mousePos) < CurrentRange then
        _ENV.Send2ndQPacket(_ENV.mousePos)
        if Config.Extras.Debug then
          _ENV.print("CancelE - 3")
        end
      else
        local FaceVector = _ENV.Vector(_ENV.myHero.visionPos) + _ENV.Vector(_ENV.myHero.visionPos) - _ENV.Vector(_ENV.myHero):normalized() * 200
        _ENV.Send2ndQPacket(FaceVector)
        if Config.Extras.Debug then
          _ENV.print("CancelE - 4")
        end
      end
    end
    if Config.AimE then
      if _ENV.target ~= nil and _ENV.ValidTarget(_ENV.target) then
        _ENV.CastE1(_ENV.target)
        _ENV.CastE2(_ENV.target)
      elseif _ENV.target2 ~= nil and _ENV.ValidTarget(_ENV.target2) then
        _ENV.CastE1(_ENV.target2)
        _ENV.CastE2(_ENV.target2)
      end
    end
    if Config.Combo then
      if _ENV.target ~= nil and _ENV.GetDistance(_ENV.target) < CurrentERange and _ENV.ValidTarget(_ENV.target) and not _ENV.target.dead then
        _ENV.Combo(_ENV.target)
      elseif _ENV.target2 ~= nil and _ENV.ValidTarget(_ENV.target2) and not _ENV.target2.dead then
        _ENV.Combo(_ENV.target2)
      end
    end
    if Config.Harass then
      if _ENV.target ~= nil and _ENV.GetDistance(_ENV.target) < CurrentERange and _ENV.ValidTarget(_ENV.target) and not _ENV.target.dead then
        _ENV.Harass(_ENV.target)
      elseif _ENV.target2 ~= nil and _ENV.ValidTarget(_ENV.target2) and not _ENV.target2.dead then
        _ENV.Harass(_ENV.target2)
      end
    end
    if Config.Farm then
      _ENV.Farm()
    end
    _ENV.AutoR()
    _ENV.KillSteal()
  end
end
function CalculateRange()
  if EStartTick == 0 then
    return 0
  end
  if not _ENV.EReady then
    return 0
  end
  if not isCastE then
    return 0
  end
  local Time = _ENV.GetTickCount() - EStartTick
  CurrentRange = 250 + Time
  if CurrentRange > CurrentERange then
    CurrentRange = CurrentERange
  end
end
function Combo(Target)
  if not ValidTarget(Target) or Target.dead then
    return
  end
  if ValidTarget(Target) and Target ~= nil and not Target.dead and GetDistance(Target) < CurrentERange and GetDistance(Target) > Config.Extras.MinERange and not IsMyManaLow() and not isCastE and Config.ComboSub.useE then
    CastE1(Target)
  elseif isCastE and Target ~= nil and GetDistance(Target) < CurrentERange + 150 and Config.ComboSub.useE then
    CastE2(Target)
  end
  if QReady and not IsMyManaLow() and Config.ComboSub.useQ then
    CastQ(Target)
  end
  if WReady and not IsMyManaLow() and Config.ComboSub.useW then
    CastW(Target)
  end
  if QReady and WReady and RReady and getDmg("Q", Target, myHero) + getDmg("W", Target, myHero) + getDmg("R", Target, myHero) > Target.health and GetDistance(Target) < 350 and not IsMyManaLow() and Config.ComboSub.useR then
    CastR(Target)
  elseif getDmg("W", Target, myHero) + getDmg("R", Target, myHero) > Target.health and WReady and RReady and GetDistance(Target) < 350 and not IsMyManaLow() and Config.ComboSub.useR then
    CastR(Target)
  elseif getDmg("R", Target, myHero) > Target.health and RReady and GetDistance(Target) < 350 and not IsMyManaLow() and Config.ComboSub.useR then
    CastR(Target)
  end
end
function Harass(Target)
  if not ValidTarget(Target) or Target.dead then
    return
  end
  if ValidTarget(Target) and Target ~= nil and not Target.dead and GetDistance(Target) < CurrentERange and GetDistance(Target) > Config.Extras.MinERange and not IsMyManaLow() and not isCastE and Config.HarassSub.useE then
    CastE1(Target)
  elseif EReady and isCastE and Target ~= nil and GetDistance(Target) < CurrentERange + 150 and Config.HarassSub.useE then
    CastE2(Target)
  end
  if QReady and not IsMyManaLow() and Config.HarassSub.useQ then
    CastQ(Target)
  end
  if WReady and not IsMyManaLow() and Config.HarassSub.useW then
    CastW(Target)
  end
end
function Farm()
  if IsMyManaLow() then
    return
  end
  if Config.FarmSub.useQ then
    FarmQ()
  end
  if Config.FarmSub.useW then
    FarmW()
  end
  if Config.FarmSub.useE then
    FarmE()
  end
end
function KillSteal()
  local EnemyHeroes = GetEnemyHeroes()
  for idx, enemy in ipairs(EnemyHeroes) do
    if ValidTarget(enemy) and enemy ~= nil and not enemy.dead then
      if GetDistance(enemy) < SpellQ.Range + 100 and getDmg("Q", enemy, myHero) >= enemy.health and Config.KS.useQ then
        CastQ(Target)
      end
      if GetDistance(enemy) < SpellW.Range + 100 and getDmg("W", enemy, myHero) >= enemy.health and Config.KS.useW then
        CastW(Target)
      end
    end
  end
  IgniteKS()
end
function AutoR()
  local numhit = 0
  local EnemyHeroes = GetEnemyHeroes()
  for idx, val in ipairs(EnemyHeroes) do
    if val ~= nil and ValidTarget(val) and GetDistance(val) < SpellR.Range then
      numhit = numhit + 1
    end
  end
  if numhit >= Config.Extras.RHits then
    CastSpell(_R)
  end
end
function CastQ(Target)
  if ValidTarget(Target) and not Target.dead and GetDistance(Target) < SpellQ.Range + 150 and QReady then
    local CastPosition, HitChance, Position = CombinedPredict(Target, SpellQ.Delay, SpellQ.Width, SpellQ.Range, SpellQ.Speed, myHero, false)
    if CastPosition ~= nil and HitChance ~= nil and GetDistance(CastPosition) < SpellQ.Range and HitChance >= 2 then
      CastSpell(_Q, CastPosition.x, CastPosition.z)
    end
  end
end
function CastW(Target)
  if ValidTarget(Target) and not Target.dead and GetDistance(Target) < SpellW.Range and WReady then
    CastSpell(_W)
  end
end
function CastE2(Target)
  if isCastE and Target ~= nil and _ENV.ValidTarget(Target) and _ENV.EReady then
    if CurrentRange >= _ENV.GetDistance(Target) and _ENV.ValidTarget(Target) then
      local CastPosition, HitChance, Position = _ENV.CombinedPredict(Target, 0.25, SpellE.Width, CurrentRange + 100, SpellE.Speed, _ENV.myHero, false)
      if CastPosition ~= nil and HitChance ~= nil and CurrentRange >= _ENV.GetDistance(CastPosition) then
        _ENV.Send2ndQPacket(CastPosition)
      end
      if Config.Extras.Debug then
        _ENV.print("CastE2 - 1")
      end
    elseif _ENV.GetDistance(Target) >= CurrentERange and _ENV.ValidTarget(Target) and _ENV.GetDistance(Target) >= CurrentRange and CurrentRange == CurrentERange then
      local CastPosition, HitChance, Position = _ENV.CombinedPredict(Target, 0.25, SpellE.Width, CurrentERange, SpellE.Speed, _ENV.myHero, false)
      if CastPosition ~= nil and HitChance ~= nil and CurrentERange >= _ENV.GetDistance(CastPosition) then
        _ENV.Send2ndQPacket(CastPosition)
      end
      if Config.Extras.Debug then
        _ENV.print("CastE2 - 2")
      end
    end
  end
end
function CastE1(Target)
  if not isCastE and _ENV.EReady and _ENV.ValidTarget(Target) then
    local current_waypoints = {}
    _ENV.table.insert(current_waypoints, _ENV.Vector(Target.visionPos.x, 0, Target.visionPos.z))
    for i = Target.pathIndex, Target.pathCount do
      _ENV.path = Target:GetPath(i)
      if _ENV.path ~= nil and _ENV.path.x then
        _ENV.table.insert(current_waypoints, _ENV.Vector(_ENV.path.x, 0, _ENV.path.z))
      end
    end
    if #current_waypoints == 1 then
      if _ENV.GetDistance(Target) < CurrentERange and _ENV.ValidTarget(Target) and _ENV.EReady then
        _ENV.CastSpell(_ENV._E, Target.x, Target.z)
      end
    elseif #current_waypoints >= 1 then
      local FirstWaypointVector = _ENV.Vector(_ENV.Vector(current_waypoints[1]) - _ENV.Vector(_ENV.myHero)):normalized()
      local SecondWaypoinVector = _ENV.Vector(_ENV.Vector(current_waypoints[#current_waypoints]) - _ENV.Vector(_ENV.myHero)):normalized()
      if FirstWaypointVector:angle(SecondWaypoinVector) < 0.7853981624999999 or FirstWaypointVector:angle(SecondWaypoinVector) > 2 * _ENV.math.pi - 0.7853981624999999 then
        local PredictedTime = (_ENV.GetDistance(Target) - 250) / 1000
        local CastPosition, HitChance, Position = _ENV.CombinedPredict(Target, PredictedTime, SpellE.Width, CurrentERange, SpellE.Speed, _ENV.myHero, false)
        if CastPosition ~= nil and HitChance ~= nil and _ENV.GetDistance(CastPosition) < CurrentERange and HitChance >= 1 then
          _ENV.CastSpell(_ENV._E, CastPosition.x, CastPosition.z)
        end
      end
    end
  end
end
function CastR(Target)
  if ValidTarget(Target) and not Target.dead and GetDistance(Target) < SpellR.Range and RReady then
    CastSpell(_R)
  end
end
function FarmQ()
  local CombinedFarmTable = CombinedFarmTable()
  if #CombinedFarmTable >= 1 then
    local QPos = GetBestQPositionFarm()
    if QPos and GetDistance(QPos) < SpellQ.Range then
      CastSpell(_Q, QPos.x, QPos.z)
    end
  end
end
function FarmW()
  local CombinedFarmTable = CombinedFarmTable()
  if #CombinedFarmTable >= 1 then
    for idx, val in ipairs(CombinedFarmTable) do
      if GetDistance(val) < SpellW.Range then
        CastSpell(_W)
      end
    end
  end
end
function FarmE()
  local CombinedFarmTable = CombinedFarmTable()
  if #CombinedFarmTable >= 1 then
    for idx, val in ipairs(CombinedFarmTable) do
      if GetDistance(val) < CurrentERange then
        CastSpell(_E, val.x, val.z)
        if GetDistance(val) > 250 then
          local Delay = (GetDistance(val) - 250) / 1000
          DelayAction(function()
            Send2ndQPacket(val)
          end, Delay)
        end
      else
      end
    end
  end
end
function CombinedFarmTable()
  EnemyMinions:update()
  JungleMinions:update()
  local ReturnTable = {}
  if #EnemyMinions.objects >= 1 then
    for idx, minion in ipairs(EnemyMinions.objects) do
      if ValidTarget(minion) then
        table.insert(ReturnTable, minion)
      end
    end
  end
  if #JungleMinions.objects >= 1 then
    for idx, minion in ipairs(JungleMinions.objects) do
      if ValidTarget(minion) then
        table.insert(ReturnTable, minion)
      end
    end
  end
  return ReturnTable
end
function GetCurrentHitQ(position)
  local MinionsTable = CombinedFarmTable()
  local counter = 0
  for i, minion in pairs(MinionsTable) do
    if GetDistance(minion, position) < SpellQ.Width then
      counter = counter + 1
    end
  end
  return counter
end
function GetBestQPositionFarm()
  local MinionsTable = CombinedFarmTable()
  local MaxQ = 0
  local MaxQPos
  for i, minion in pairs(MinionsTable) do
    local hitQ = countminionshitQ(minion)
    if hitQ ~= nil and MaxQ < hitQ or MaxQPos == nil then
      MaxQPos = minion
      MaxQ = hitQ
    end
  end
  if MaxQPos then
    local CastPosition = MaxQPos
    return CastPosition
  else
    return nil
  end
end
function countminionshitQ(pos)
  local n = 0
  local MinionsTable = CombinedFarmTable()
  local ExtendedVector = Vector(myHero) + Vector(Vector(pos) - Vector(myHero)):normalized() * SpellQ.Range
  local EndPoint = Vector(myHero) + ExtendedVector
  for i, minion in ipairs(MinionsTable) do
    local MinionPointSegment, MinionPointLine, MinionIsOnSegment = VectorPointProjectionOnLineSegment(Vector(myHero), Vector(EndPoint), Vector(minion))
    local MinionPointSegment3D = {
      x = MinionPointSegment.x,
      y = pos.y,
      z = MinionPointSegment.y
    }
    if MinionIsOnSegment and GetDistance(MinionPointSegment3D, pos) < SpellQ.Width then
      n = n + 1
    end
  end
  return n
end
function Send2ndQPacket(pos)
  packet = CLoLPacket(230)
  packet:EncodeF(myHero.networkID)
  packet:Encode1(130)
  packet:EncodeF(pos.x)
  packet:EncodeF(pos.y)
  packet:EncodeF(pos.z)
  SendPacket(packet)
end
function OnSendPacket(packet)
  if initDone and _ENV._G[_ENV.c({
    106,
    100,
    107,
    110,
    109,
    118
  })] then
    if packet.header == 229 or packet.header == 230 and Overriding and isCastE then
      packet.pos = 5
      _ENV.spelltype = packet:Decode1()
      if _ENV.spelltype == 130 then
        packet.pos = 1
        packet:Block()
        if Config.Extras.Debug then
          _ENV.print("BLOCKED 0xE6")
        end
      end
    end
    if packet.header == _ENV.Packet.headers.S_MOVE and Overriding and isCastE then
      packet:Block()
    end
  end
end
function OnProcessSpell(unit, spell)
  if initDone and _ENV._G[_ENV.c({
    106,
    100,
    107,
    110,
    109,
    118
  })] and unit.isMe and spell.name == "ZacE" and isCastE then
    isCastE = false
    EStartTick = 0
    LastETick = _ENV.GetTickCount()
  end
end
function OnGainBuff(unit, buff)
  if not _G[c({
    106,
    100,
    107,
    110,
    109,
    118
  })] or not initDone then
    return
  end
  if unit.isMe and buff.name == "ZacE" then
    isCastE = true
    EStartTick = GetTickCount()
  end
  if unit.isMe and buff.type == 5 or buff.type == 7 or buff.type == 11 or buff.type == 21 or buff.type == 24 or buff.type == 30 and isCastE then
    isCastE = false
    EStartTick = 0
    LastETick = GetTickCount()
  end
  if unit.isMe and buff.name == "zacemove" then
    isCastE = false
    EStartTick = 0
    LastETick = GetTickCount()
  end
end
function OnLoseBuff(unit, buff)
  if not _G[c({
    106,
    100,
    107,
    110,
    109,
    118
  })] or not initDone then
    return
  end
  if unit.isMe and buff.name == "ZacE" then
    if Config.Extras.Debug then
      print("E buff lost")
    end
    isCastE = false
    EStartTick = 0
    LastETick = GetTickCount()
  end
end
function OnCreateObj(object)
  if initDone and _ENV._G[_ENV.c({
    106,
    100,
    107,
    110,
    109,
    118
  })] and object.name == "ZacChunk" and object.valid and object.team == _ENV.myHero.team then
    Blobs[object.networkID] = object
  end
end
function OnDeleteObj(object)
  if initDone and _ENV._G[_ENV.c({
    106,
    100,
    107,
    110,
    109,
    118
  })] and object.name == "ZacChunk" and object.valid and object.team == _ENV.myHero.team then
    Blobs[object.networkID] = nil
  end
end
function checkOrbwalker()
  if _G.MMA_Loaded ~= nil and _G.MMA_Loaded then
    IsMMALoaded = true
    print("MMA detected, using MMA compatibility")
  elseif _G.AutoCarry then
    IsSACLoaded = true
    print("SAC detected, using SAC compatibility")
  elseif FileExist(LIB_PATH .. "SOW.lua") then
    require("SOW")
    SOWi = SOW(VP)
    IsSowLoaded = true
    SOWi:RegisterAfterAttackCallback(AutoAttackReset)
    print("SOW detected, using SOW compatibility")
  else
    print("Please use SAC, MMA, or SOW for your orbwalker")
  end
end
function IgniteKS()
  if igniteReady then
    local Enemies = GetEnemyHeroes()
    for idx, val in ipairs(Enemies) do
      if ValidTarget(val, 600) and getDmg("IGNITE", val, myHero) > val.health and 600 >= GetDistance(val) then
        CastSpell(ignite, val)
      end
    end
  end
end
function OnDraw()
  if not initDone or not _ENV._G[_ENV.c({
    106,
    100,
    107,
    110,
    109,
    118
  })] then
    return
  end
  if Config.Extras.Debug and CurrentRange > 0 then
    _ENV.DrawCircle3D(_ENV.myHero.x, _ENV.myHero.y, _ENV.myHero.z, CurrentRange, 1, _ENV.ARGB(255, 255, 0, 0))
  end
  if Config.Extras.Debug then
    _ENV.DrawText3D("Cast E " .. _ENV.tostring(isCastE) .. " Override " .. _ENV.tostring(Overriding) .. " Range " .. _ENV.tostring(CurrentRange) .. " Max Range " .. _ENV.tostring(CurrentERange), _ENV.myHero.x, _ENV.myHero.y, _ENV.myHero.z, 20, _ENV.ARGB(255, 255, 0, 0), true)
  end
  if Config.Draw.DrawBlobs and #Blobs >= 1 then
    for key, value in _ENV.ipairs(Blobs) do
      _ENV.DrawCircle3D(value.x, value.y, value.z, 200, 1, _ENV.ARGB(255, 0, 255, 255))
    end
  end
  if Config.Draw.DrawQ and _ENV.QReady then
    _ENV.DrawCircle3D(_ENV.myHero.x, _ENV.myHero.y, _ENV.myHero.z, SpellQ.Range, 1, _ENV.ARGB(255, 0, 255, 255))
  end
  if Config.Draw.DrawE and _ENV.EReady then
    _ENV.DrawCircle3D(_ENV.myHero.x, _ENV.myHero.y, _ENV.myHero.z, CurrentERange, 1, _ENV.ARGB(255, 0, 255, 255))
  end
  if Config.Draw.DrawW and _ENV.WReady then
    _ENV.DrawCircle3D(_ENV.myHero.x, _ENV.myHero.y, _ENV.myHero.z, SpellW.Range, 1, _ENV.ARGB(255, 0, 255, 255))
  end
  if Config.Draw.DrawTarget then
    if _ENV.target ~= nil then
      _ENV.DrawCircle3D(_ENV.target.x, _ENV.target.y, _ENV.target.z, 100, 1, _ENV.ARGB(255, 255, 0, 0))
    elseif _ENV.Qtarget ~= nil then
      _ENV.DrawCircle3D(_ENV.Qtarget.x, _ENV.Qtarget.y, _ENV.Qtarget.z, 100, 1, _ENV.ARGB(255, 255, 0, 0))
    end
  end
end
function OnProcessSpell(unit, spell)
  if not _G[c({
    106,
    100,
    107,
    110,
    109,
    118
  })] or not initDone then
    return
  end
  if #ToInterrupt > 0 then
    for _, ability in pairs(ToInterrupt) do
      if spell.name == ability and unit.team ~= myHero.team and GetDistance(unit) < SpellR.Range and RReady and Config.Extras.RSpells then
        CastSpell(_R)
      end
    end
  end
end
function Check()
  QReady = myHero:CanUseSpell(_Q) == READY
  WReady = myHero:CanUseSpell(_W) == READY
  EReady = myHero:CanUseSpell(_E) == READY
  RReady = myHero:CanUseSpell(_R) == READY
  if myHero:GetSpellData(SUMMONER_1).name:find("SummonerDot") then
    ignite = SUMMONER_1
  elseif myHero:GetSpellData(SUMMONER_2).name:find("SummonerDot") then
    ignite = SUMMONER_2
  end
  igniteReady = ignite ~= nil and myHero:CanUseSpell(ignite) == READY
  EnemyMinions:update()
  JungleMinions:update()
  if Config.CancelE then
    Overriding = false
  elseif Config.Harass or Config.Farm or Config.Combo or Config.AimE then
    Overriding = true
  else
    Overriding = false
  end
  if myHero:GetSpellData(_E).level == 0 then
    CurrentERange = 0
    CurrentEMaxDelay = 0
  else
    CurrentERange = SpellE.Range[myHero:GetSpellData(_E).level]
    CurrentEMaxDelay = SpellE.MaxDelay[myHero:GetSpellData(_E).level]
  end
  if myHero.dead then
    isCastE = false
    EStartTick = 0
    LastETick = GetTickCount()
  end
end
function OrbwalkToBlob()
  if #Blobs >= 1 then
    for idx, val in _ENV.ipairs(Blobs) do
      if val == nil or _ENV.GetDistance(val) < 300 then
      end
    end
  end
end
function OrbwalkToPosition(position)
  if position ~= nil then
    if _G.MMA_Loaded then
      _G.moveToCursor(position.x, position.z)
    elseif _G.AutoCarry and _G.AutoCarry.Orbwalker then
      _G.AutoCarry.Orbwalker:OverrideOrbwalkLocation(position)
    end
  elseif _G.MMA_Loaded then
    return
  elseif _G.AutoCarry and _G.AutoCarry.Orbwalker then
    _G.AutoCarry.Orbwalker:OverrideOrbwalkLocation(nil)
  end
end
function IsMyManaLow()
  if myHero.health < myHero.maxHealth * (Config.Extras.mManager / 100) then
    return true
  else
    return false
  end
end
function CombinedPredict(Target, Delay, Width, Range, Speed, myHero, Collision)
  if Target == nil or Target.dead or not ValidTarget(Target) then
    return
  end
  if not ProdOneLoaded or not Config.Extras.Prodiction then
    local CastPosition, Hitchance, Position = VP:GetLineCastPosition(Target, Delay, Width, Range, Speed, myHero, false)
    if CastPosition ~= nil and Hitchance >= 1 then
      return CastPosition, Hitchance + 1, Position
    end
  elseif ProdOneLoaded and Config.Extras.Prodiction then
    info = Prodiction.GetPrediction(Target, Range, Speed, Delay, Width, myHero)
    CastPosition = Prodiction.GetPrediction(Target, Range, Speed, Delay, Width, myHero)
    if info ~= nil and info.hitchance ~= nil and CastPosition ~= nil then
      Hitchance = info.hitchance
      return CastPosition, Hitchance, CastPosition
    end
  end
end
function CombinedPos(Target, Delay, Speed, myHero, Collision)
  if Target == nil or Target.dead or not ValidTarget(Target) then
    return
  end
  if Collision == nil then
    Collision = false
  end
  if not ProdOneLoaded or not Config.Extras.Prodiction then
    local PredictedPos, HitChance = VP:GetPredictedPos(Target, Delay, Speed, myHero, Collision)
    return PredictedPos, HitChance
  elseif ProdOneLoaded and Config.Extras.Prodiction then
    local PredictedPos, info = Prodiction.GetPrediction(Target, 20000, Speed, Delay, 1, myHero)
    if PredictedPos ~= nil and info ~= nil and info.hitchance ~= nil then
      return PredictedPos, info.hitchance
    end
  end
end
